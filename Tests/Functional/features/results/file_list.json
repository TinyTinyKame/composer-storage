{
    "IDV-OPTD\/003\/quest\/myCRD\/conf.ini": "[config]\nstages[] = Etape 1\nstages[] = Etape 2\nstages[] = Soutenance finale\n\n[Etape 1]\nduration = 5 weeks 6 days 14 hours 42 minutes\nstart = +0 day\n\n[Etape 2]\nduration = 10 weeks 6 days 14 hours 42 minutes\nstart = +0 day\n\n[Soutenance finale]\nduration = 13 weeks 3 days 14 hours 42 minutes\nstart = +0 day\n",
    "IDV-OPTD\/003\/quest\/myCRD\/public\/commands-generator.py": "#!\/usr\/bin\/env python\n\nimport sys\nimport random\n\n\"\"\"Generator of commands for the ETNA optimization rush.\n\"\"\"\n\n__author__ = \"Remy SAISSY (remy.saissy@epitech.net)\"\n__version__ = \"$Revision: 1.0 $\"\n__date__ = \"$Date: 2009\/14\/06 11:45:0 $\"\n__copyright__ = \"Copyright (c) 2009 Remy SAISSY\"\n__license__ = \"GPL\"\n\ndef     generate_hashtable_commands(number_of_keys, number_of_entries, output_filename):\n    # Generate keys.\n    keys = []\n    for cnt in range(0, number_of_keys):\n        keys.append(random.randint(0, sys.maxint))\n    # Generate commands.\n    lines = []\n    for cnt in range(0,number_of_entries):\n        # Choose a key among the valid set.\n        line = str(random.randint(0, number_of_keys))\n        # Check wether this will be an insert or lookup order.\n        if random.randint(0, sys.maxint) % 3 == 0:\n            line += ' ' + str(random.randint(0, sys.maxint))\n        elif random.randint(0, sys.maxint) % 5 == 0:\n            line += ' D'\n        line += '\\n'\n        lines.append(line)\n    f = open(output_filename, 'w')\n    f.writelines(lines)\n    f.close()\n\n\nif __name__ == \"__main__\":\n    generate_hashtable_commands(100, 10000, 'small-commands.lst')\n    generate_hashtable_commands(500, 100000, 'medium-commands.lst')\n    generate_hashtable_commands(5000, 1000000, 'big-commands.lst')\n    generate_hashtable_commands(10000, 8000000, 'huge-commands.lst')\n"
}
